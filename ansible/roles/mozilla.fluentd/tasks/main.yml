---
# file: tasks/main.yml
# Top-level installer for Fluentd.
#
# @see http://docs.treasuredata.com/articles/td-agent
#

- name: set role variables, if necessary
  include: set-role-variables.yml

- name: delegate to APT system for installation
  include: use-apt.yml
  when: ansible_pkg_mgr == "apt"

- name: delegate to YUM system for installation
  include: use-yum.yml
  when: ansible_pkg_mgr == "yum"

- name: create log mountpoint
  file:
    path: /srv/logs
    state: directory

- name: rename default td-agent.conf
  command: creates="/etc/td-agent/td-agent.conf.bak" mv /etc/td-agent/td-agent.conf /etc/td-agent/td-agent.conf.bak

- name: copy (from template) new "td-agent.conf" from main playbook's
  template:
    src:  "templates/td-agent.conf.j2"
    dest: /etc/td-agent/td-agent.conf
    owner: td-agent
    group: td-agent
  when: tdagent_conf_template is defined

- name: copy other config files from playbook's, if any
  template:
    src:  "{{ playbook_dir }}/{{ item.value.src }}"
    dest: "/etc/td-agent/config.d/{{ item.value.dest }}"
    owner: td-agent
    group: td-agent
  with_dict: '{{ tdagent_conf_others | default({}) }}'

# GEM installed on:
#   /opt/td-agent/embedded/lib/ruby/gems/2.1.0/gems/
- name: install plugins, if any
  gem:
      name: "{{ item }}"
      executable: /opt/td-agent/embedded/bin/fluent-gem
      state: latest
      user_install: no
  with_items: "{{ tdagent_plugins | default([]) }}"

- name: install plugins with specified versions, if any
  gem:
      name: "{{ item.value.name }}"
      executable: /opt/td-agent/embedded/bin/fluent-gem
      state: present
      version: "{{ item.value.version }}"
      user_install: no
  with_dict: "{{ tdagent_plugins_versions | default({}) }}"

- name: create position file
  file:
    state: touch
    path: /etc/td-agent/syslog.pos
    owner: td-agent
    group: td-agent
    mode: 0644
